server {
	listen 443 ssl;
	listen [::]:443 ssl; # Localhost on IPv4 and IPv6, sets explicitely that all connection must be ssl;
	# If you do not specify an IP address, Nginx will listen on all available interfaces for the specified port.

	server_name asepulve.42.fr www.asepulve.42.fr;

	# Certitication and key as created in Docker:
	ssl_certificate /etc/nginx/ssl/asepulve.crt;
	ssl_certificate_key /etc/nginx/ssl/asepulve.key;

	# Specification of the allowed protocol version:
	ssl_protocols TLSv1.2 TLSv1.3;

	# Sets the working directory of nginx to /var/www/html, it will be the next root:
	root /var/www/html;


	# Tries to serve static files in case they do not exist it'll fallback to index.php which can handle dinamic requests:
	location / {
		# Check if the file exists, it none of the files exists it passes to the named location.
		#try_files $uri $uri/ index.php?$args;
		index index.html;
	}

	# Case insensitive matching for static file, set the max-age header to a year so browser won't be requesting over time. Technically improves performance due caching in the browser side. This location has a higher specifity over location /.
	location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
		expires max;
		log_not_found off;
	}

	# Defines a location with case sensitive regex modifier for all of the URI that ends with .php:
	location ~ \.php$ {
		include /etc/nginx/fastcgi_params; # Includes the nginx params for the fastcgi. Sets the enviroments for the fastCGI application.
		fastcgi_pass:  ;# Can be either a path to a file or a ip for a server
		fastcgi_param SCRIPT_FILENAME $document_root $fastcgi_script_name;
	}

}


# http://nginx.org/en/docs/http/ngx_http_core_module.html#listen

# The ssl parameter (0.7.14) allows specifying that all connections accepted on this port should work in SSL mode. This allows for a more compact configuration for the server that handles both HTTP and HTTPS requests. 

